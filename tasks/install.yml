---
- name: Ensure ACL package exists when creating a new user
  ansible.builtin.package:
    name: acl
    state: present
  become: true
  when: komodo_user_exists is not defined or not komodo_user_exists
  tags: komodo-user

- name: Ensure neccesary packages for systemd user scope are installed
  ansible.builtin.apt:
    name:
      - systemd-container
      - libpam-systemd
    state: present
  become: true
  tags: komodo-systemd-config

- name: Ensure Komodo user exists
  ansible.builtin.user:
    name: "{{ komodo_user }}"
    shell: /usr/sbin/nologin
    uid: "{{ komodo_user_uid }}"
    groups: docker
    append: true
    create_home: true
    password: "{{ komodo_user_password | default(omit) }}"
    home: "{{ komodo_home }}"
  when: komodo_user_exists is not defined or not komodo_user_exists
  tags: komodo-user

- name: Get Komodo user UID
  tags:
    - komodo-user
    - komodo-systemd-config
  block:
    - name: Get Komodo user UID if not provided
      ansible.builtin.command: id -u {{ komodo_user }}
      become: true
      register: komodo_uid
      changed_when: false
      when: komodo_user_uid is not defined
      
    - name: Set komodo_uid fact
      ansible.builtin.set_fact:
        komodo_uid: "{{ komodo_user_uid | string if komodo_user_uid is defined else komodo_uid.stdout }}"

- name: Ensure necessary directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ komodo_user }}"
    group: "{{ komodo_group }}"
    mode: "0750"
  with_items:
    - "{{ komodo_bin_dir }}"
    - "{{ komodo_config_dir }}"
    - "{{ komodo_service_dir }}"
  tags: komodo-user

- name: Ensure SSL directories exists
  become: true
  when: ssl_enabled | default(true)
  block:
    - name: Ensure /etc/komodo exists
      ansible.builtin.file:
        path: "/etc/komodo/ssl"
        state: directory
        owner: "{{ komodo_user }}"
        group: "{{ komodo_group }}"
        mode: "0750"
        recurse: true
    - name: Ensure /etc/komodo exists
      ansible.builtin.file:
        path: "/etc/komodo"
        state: directory
        owner: "{{ komodo_user }}"
        group: "{{ komodo_group }}"
        mode: "0750"
        recurse: true
  tags: komodo-user

- name: Enable lingering for Komodo user
  ansible.builtin.command: loginctl enable-linger {{ komodo_user }}
  changed_when: false
  tags:
    - komodo-systemd-config
    - komodo-user

- name: Stop periphery service via systemd_service
  ansible.builtin.systemd_service:
    scope: user
    name: periphery
    state: stopped
  become: true
  become_user: "{{ komodo_user }}"
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ komodo_uid }}"
  changed_when: false
  tags:
    - komodo-systemd-config
    - komodo-user

- name: Fail if unsupported architecture
  ansible.builtin.fail:
    msg: "Unsupported architecture: {{ ansible_architecture }}. Supported architectures are x86_64 and aarch64."
  when: ansible_architecture not in ['x86_64', 'aarch64']

- name: Download Komodo Periphery Agent
  ansible.builtin.get_url:
    url: "https://github.com/moghtech/komodo/releases/download/{{ komodo_version }}/{{ binary_name }}"
    dest: "{{ komodo_bin_path }}"
    mode: "0755"
    owner: "{{ komodo_user }}"
    group: "{{ komodo_group }}"
    force: true

- name: Deploy configuration file
  ansible.builtin.template:
    src: "{{ komodo_config_file_template }}"
    dest: "{{ komodo_config_path }}"
    mode: "0640"
    owner: "{{ komodo_user }}"
    group: "{{ komodo_group }}"

- name: Deploy systemd user service file
  ansible.builtin.template:
    src: "{{ komodo_service_file_template }}"
    dest: "{{ komodo_service_path }}"
    mode: "0644"
    owner: "{{ komodo_user }}"
    group: "{{ komodo_group }}"
  tags: komodo-systemd-config

- name: Reload komodoâ€™s user unit files
  ansible.builtin.systemd_service:
    scope: user
    daemon_reload: true
  become: true
  become_user: "{{ komodo_user }}"
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ komodo_uid }}"
  changed_when: false
  tags: komodo-systemd-config

- name: Ensure mount directory exists
  ansible.builtin.file:
    path: "{{ komodo_mount_path }}"
    state: directory
    owner: "{{ komodo_user }}"
    group: "{{ komodo_user }}"
    mode: "0770"
  when:
    - komodo_mount_path is defined
    - komodo_mount_path | length > 0

- name: Mount data directory
  ansible.posix.mount:
    path: "{{ komodo_mount_path }}"
    src: "{{ komodo_mount_server }} ~ ':' ~ {{ komodo_mount_server_path }}"
    boot: true
    fstype: "{{ komodo_mount_fstype }}"
    opts: defaults
    state: mounted
  when:
    - komodo_mount_path is defined
    - komodo_mount_path | length > 0
    - komodo_mount_server is defined
    - komodo_mount_server | length > 0
    - komodo_mount_server_path is defined
    - komodo_mount_server_path | length > 0

- name: Start periphery service
  ansible.builtin.systemd_service:
    scope: user
    name: periphery
    enabled: true
    state: started
  become: true
  become_user: "{{ komodo_user }}"
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ komodo_uid }}"
  changed_when: false
  tags: komodo-systemd-config
