---
- name: Check if Komodo user exists
  ansible.builtin.getent:
    database: passwd
    key: "{{ komodo_user }}"
  failed_when: false      # keep going if the user is absent
  changed_when: false

- name: Set komodo user facts
  ansible.builtin.set_fact:
    komodo_user_exists: "{{ ansible_facts.getent_passwd[komodo_user] is defined }}"
    komodo_user_uid: >-
      "{{ ansible_facts.getent_passwd[komodo_user][2] | default(komodo_user_uid) }}"

# Choose binary_name based on user override, architecture, and version
- name: Select Komodo binary
  ansible.builtin.set_fact:
    binary_name: >-
      {%- if komodo_bin | length > 0 -%}
        {{ komodo_bin }}
      {%- elif ansible_architecture == 'aarch64' -%}
        {{ komodo_bin_aarch64 }}
      {%- else -%} {# x86_64 #}{%- if (komodo_version | regex_replace('^v', '')) is version('1.16.12', '>=') -%}
          {{ komodo_bin_x86 }}
      {%- else -%}
          {{ komodo_bin_x86_legacy }}
      {%- endif -%} {%- endif -%}
  when: komodo_action == "install" or komodo_action == "update"

- name: Include user creation tasks
  ansible.builtin.import_tasks: komodo_user.yml
  tags: komodo-user
  when:
    - komodo_action == "install"
    - komodo_user_exists is not defined or not komodo_user_exists

- name: Include install tasks
  ansible.builtin.import_tasks: install.yml
  when: komodo_action == "install"

- name: Include update tasks
  ansible.builtin.import_tasks: update.yml
  when: komodo_action == "update"

- name: Include uninstall tasks
  ansible.builtin.import_tasks: uninstall.yml
  when: komodo_action == "uninstall"

- name: Include share mount tasks
  ansible.builtin.import_tasks: share_mount.yml
  when:
    - komodo_action == "install"
    - komodo_mount_path is defined and komodo_mount_path | length > 0
    - komodo_mount_server is defined and komodo_mount_server | length > 0
    - komodo_mount_server_path is defined and komodo_mount_server_path | length > 0
